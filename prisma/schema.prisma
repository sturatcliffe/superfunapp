datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id                Int         @id       @default(autoincrement())
  email             String      @unique
  name              String?
  lastReadMessages  DateTime?
  
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  password          Password?
  items             Item[]      @relation(name: "Watchlist")
  createdItems      Item[]      @relation(name: "CreatedItems")
  messages          Message[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int @unique
}

model Item {
  id          Int @id @default(autoincrement())
  url         String @db.Text
  title       String @db.Text
  description String @db.Text
  image       String @db.Text
  watched     Boolean? @default(false)
  status      WatchStatus @default(Unwatched)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(name: "Watchlist", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int

  createdBy     User    @relation(name: "CreatedItems", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById   Int
}

model Message {
  id          Int @id @default(autoincrement())
  text        String @db.Text

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
}

enum WatchStatus{
  Unwatched
  Watched
  Watching
}

